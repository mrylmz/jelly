ModuleDeclaration
  @name = ''
  FunctionDeclaration
    @name = 'fibonacci'
    ParameterDeclaration
      @name = 'n'
      OpaqueTypeRef
        @name = 'Int'
    OpaqueTypeRef
      @name = 'Int'
    BlockStatement
      IfStatement
        BinaryExpression
          @operator = '<'
          IdentifierExpression
            @identifier = 'n'
          IntLiteral
            @value = '2'
        BlockStatement
          ReturnStatement
            IdentifierExpression
              @identifier = 'n'
      ReturnStatement
        BinaryExpression
          @operator = '+'
          CallExpression
            IdentifierExpression
              @identifier = 'fibonacci'
            BinaryExpression
              @operator = '-'
              IdentifierExpression
                @identifier = 'n'
              IntLiteral
                @value = '1'
          CallExpression
            IdentifierExpression
              @identifier = 'fibonacci'
            BinaryExpression
              @operator = '-'
              IdentifierExpression
                @identifier = 'n'
              IntLiteral
                @value = '2'
